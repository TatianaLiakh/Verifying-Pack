    1          Прогр АЛГОРИТМ {
    2          /* Стенд #1 Автоматизированная электросушилка
    3          Внимание! Период активизации гиперпроцесса равен 100 миллисекундам */
    4          
    5          ТАКТ 50;
    6          КОНСТ ВКЛ                1;
    7          КОНСТ ВЫКЛ               0;
    8          
    9          /*Коды сообщений от оператора */ 
   10          ПЕРЕЧИСЛЕНИЕ {
   11          	КОМ2АУ_В_РУЧНОЕ_УПРАВЛЕНИЕ,
   12          	КОМ2АУ_ОТКЛЮЧИТЬ_РУЧНОЕ_УПРАВЛЕНИЕ,
   13          	КОМ2АУ_ВКЛЮЧИТЬ_СУШИЛКУ,
   14          	КОМ2АУ_ВЫКЛЮЧИТЬ_СУШИЛКУ
   15          };
   16          
   17          /*Коды сообщений к оператору */ 
   18          ПЕРЕЧИСЛЕНИЕ 
   19          {
   20          	АУ2ГУИ_ЕСТЬ_СУШИЛКА_В_РУЧНОЕ_УПРАВЛЕНИЕ,
   21          	АУ2ГУИ_ЕСТЬ_ОТКЛЮЧИТЬ_РУЧНОЕ_УПРАВЛЕНИЕ,
   22          	АУ2ГУИ_СУШИЛКА_ВЫКЛЮЧЕНА,
   23          	АУ2ГУИ_СУШИЛКА_ВКЛЮЧЕНА
   24          };
   25          
   26          /*сделать возможность включения заголовков*/
   27          ФУНКЦИЯ ЦЕЛ GetNextMsgGUI(ПУСТО);
   28          
   29          ФУНКЦИЯ ЦЕЛ  GetMsgGUICode        (ПУСТО);  /*чтение из памяти кода события */
   30          ФУНКЦИЯ ПЛАВ GetFloatParamGUI     (ПУСТО);  /*чтение из памяти параметра события  используется */
   31          /* ФУНКЦИЯ КЦЕЛ GetShortParamGUI     (ПУСТО); */
   32          ФУНКЦИЯ ЦЕЛ  GetIntParamGUI       (ПУСТО);  /*чтение с экрана гуи - не исползуется */
   33          ФУНКЦИЯ ДЦЕЛ GetLongParamGUI      (ПУСТО);  /*чтение с экрана гуи - исползуется */
   34          
   35          ФУНКЦИЯ ЦЕЛ  SendMsgGUICode       (ЦЕЛ);
   36          ФУНКЦИЯ ЦЕЛ  SendMsgFloatParamGUI (ЦЕЛ, ПЛАВ);
   37          ФУНКЦИЯ ЦЕЛ  SendMsgLongParamGUI  (ЦЕЛ, ДЦЕЛ);
   38          
   39          ВХОД  ЛОГ_ВХОДЫ1  0 0 8; /* имя, базовый адрес, доп. адр. порта, 8бит */
   40          ВХОД  ЛОГ_ВХОДЫ2  0 1 8; /* имя, базовый адрес, доп. адр. порта, 8бит */
   41          ВЫХОД ЛОГ_ВЫХОДЫ1 1 0 8;
   42          ВЫХОД ЛОГ_ВЫХОДЫ2 1 1 8;
   43          
   44          ПРОЦ Инициализация
   45          {
   46          /* ВХОДНЫЕ СИГНАЛЫ: */
   47          ЦЕЛ ЦелоеЗначение = {ЛОГ_ВХОДЫ1[5]} ДЛЯ ВСЕХ;
   48           ЛОГ К_РУКИ_ПОД_СУШИЛКОЙ    = {ЛОГ_ВХОДЫ1[1]} ДЛЯ ВСЕХ;
   49           
   50           /*Флаги*/
   51          	ЛОГ ФлагРучноеУправление ДЛЯ ВСЕХ;
   52          
   53          
   54          /* ВЫХОДНЫЕ СИГНАЛЫ (т.к. привязаны к модулю выходов): */ 
   55           ЛОГ У_ВКЛ_СУШИЛКУ = {ЛОГ_ВЫХОДЫ1[1]} ДЛЯ ВСЕХ;
   56           
   57           
   58           /*ПЛАВ Температура = {ЛОГ_ВХОДЫ2  []} ДЛЯ ВСЕХ; */ 
   59          
   60          /*########  СОСТОЯНИЯ ПРОЦЕССА  #########*/
   61           СОСТ Начало{  /* NB: 1-е f-сост. 1-го проц. - активно по включению питания */
   62          	СТАРТ ПРОЦ ЧтениеКольцевогоБуфера;
   63          	В СОСТ Работа;   
   64           }
   65           СОСТ Работа
   66           {
   67             ЕСЛИ (К_РУКИ_ПОД_СУШИЛКОЙ == ВКЛ  && ФлагРучноеУправление == ВЫКЛ) 
   68             { 
   69          		SendMsgGUICode(АУ2ГУИ_СУШИЛКА_ВЫКЛЮЧЕНА);
   70               У_ВКЛ_СУШИЛКУ = ВКЛ;
   71               В СЛЕДУЮЩЕЕ;
   72          	 }
   73          	 ИНАЧЕ ЕСЛИ (К_РУКИ_ПОД_СУШИЛКОЙ == ВЫКЛ  && ФлагРучноеУправление == ВЫКЛ)
   74          		У_ВКЛ_СУШИЛКУ = ВЫКЛ;
   75           }
   76           СОСТ Сушка{  
   77            ЕСЛИ (ФлагРучноеУправление == ВЫКЛ && К_РУКИ_ПОД_СУШИЛКОЙ == ВКЛ) В СОСТ Сушка;
   78            ТАЙМАУТ 12 В СОСТ Работа; 
   79           }
   80          } /* \ПРОЦ */
   81          
   82          /*==============================================*/
   83          /*==============================================*/
   84          /*=                                            =*/
   85          /*=      ПРОЦЕСС ЧтениеКольцевогоБуфера        =*/
   86          /*=                                            =*/
   87          /*==============================================*/
   88          /*==============================================*/
   89          ПРОЦ ЧтениеКольцевогоБуфера{  
   90          ИЗ ПРОЦ Инициализация ФлагРучноеУправление, У_ВКЛ_СУШИЛКУ; 
   91          /* */
   92          ЦЕЛ КодСообщенияОтГуи ЛОКАЛ;
   93           СОСТ Начало{
   94              /*  читаем код и параметр события из кольцевого буфера в структуру */
   95              ЕСЛИ (GetNextMsgGUI()) 
   96          	{
   97          		КодСообщенияОтГуи = GetMsgGUICode();
   98          		ЕСЛИ (КодСообщенияОтГуи == КОМ2АУ_В_РУЧНОЕ_УПРАВЛЕНИЕ)
   99          		{
  100          			ФлагРучноеУправление = ВКЛ;
  101          			SendMsgGUICode(АУ2ГУИ_ЕСТЬ_СУШИЛКА_В_РУЧНОЕ_УПРАВЛЕНИЕ);
  102          		}
  103          		ИНАЧЕ	ЕСЛИ (КодСообщенияОтГуи == КОМ2АУ_ОТКЛЮЧИТЬ_РУЧНОЕ_УПРАВЛЕНИЕ)
  104          		{
  105          			ФлагРучноеУправление = ВКЛ;
  106          			SendMsgGUICode(АУ2ГУИ_ЕСТЬ_ОТКЛЮЧИТЬ_РУЧНОЕ_УПРАВЛЕНИЕ);
  107          		}
  108          		ИНАЧЕ ЕСЛИ (КодСообщенияОтГуи == КОМ2АУ_ВКЛЮЧИТЬ_СУШИЛКУ && ФлагРучноеУправление == ВКЛ)
  109          		{
  110          			У_ВКЛ_СУШИЛКУ = ВКЛ;
  111          			SendMsgGUICode(АУ2ГУИ_СУШИЛКА_ВКЛЮЧЕНА);
  112          		}
  113          		ИНАЧЕ ЕСЛИ (КодСообщенияОтГуи == КОМ2АУ_ВЫКЛЮЧИТЬ_СУШИЛКУ && ФлагРучноеУправление == ВКЛ)
  114          		{
  115          			У_ВКЛ_СУШИЛКУ = ВЫКЛ;
  116          			SendMsgGUICode(АУ2ГУИ_СУШИЛКА_ВЫКЛЮЧЕНА);			
  117          		}
  118          	}
  119          	ЗАЦИКЛИТЬ;
  120          }
  121          }
  122          	
  123          
  124          }  /* \Прогр */

%RCSL-I-SUMMARY, Completed with 0 error(s).
%RCSL-I-SUMMARY, Completed with 0 warning(s).

 %RCSL-I-SUMMARY, Completed with 0 error(s).