 Прогр ЭлектросушилкаИмитатор {
/* Стенд #1 Автоматизированная электросушилка
Внимание! Период активизации гиперпроцесса равен 100 миллисекундам */

КОНСТ ВКЛ                1;
КОНСТ ВЫКЛ               0;
КОНСТ ЗадержкаОбъекта		10;
КОНСТ ЗадержкаДатчика		10;

/*Набор команд для ВОУ*/
 ПЕРЕЧИСЛЕНИЕ
{
	БУС2ВОУ_ПОМЕСТИТЬ_РУКИ,
	БУС2ВОУ_УБРАТЬ_РУКИ,
	БУС2ВОУ_СЛОМАТЬ_СУШИЛКУ,
	БУС2ВОУ_СУШИЛКА_РАБОТАЕТ
};
 
ФУНКЦИЯ ЦЕЛ GetMessageFromScenariousBlock(ПУСТО);
ФУНКЦИЯ ЦЕЛ GetMessageCodeFromScenariousBlock(ПУСТО);
ФУНКЦИЯ ПЛАВ Random(ПУСТО);

ВХОД  ЛОГ_ВХОДЫ1  0 0 8; /* имя, базовый адрес, доп. адр. порта, 8бит */
ВХОД  ЛОГ_ВХОДЫ2  1 0 8; /* имя, базовый адрес, доп. адр. порта, 8бит */
ВЫХОД ЛОГ_ВЫХОДЫ1 0 0 8;
ВЫХОД ЛОГ_ВЫХОДЫ2 1 0 8;

ПРОЦ Инициализация{

ЛОГ К_РУКИ_ПОД_СУШИЛКОЙ    = {ЛОГ_ВЫХОДЫ1[1]} ДЛЯ ВСЕХ;
ЛОГ У_ВКЛ_СУШИЛКУ = {ЛОГ_ВХОДЫ1[1]} ДЛЯ ВСЕХ;
ЛОГ ФлагИсправностьСушилки ДЛЯ ВСЕХ;


/*########  СОСТОЯНИЯ ПРОЦЕССА  #########*/
 СОСТ Начало{  /* NB: 1-е f-сост. 1-го проц. - активно по включению питания */
	ФлагИсправностьСушилки = ВКЛ;
	СТАРТ ПРОЦ ЧтениеСценариев;
	В СОСТ Работа; 
 }
 
 СОСТ Работа
	{
		ЕСЛИ (ФлагИсправностьСушилки == ВКЛ)
		{
			СТОП ПРОЦ НеисправнаяРабота;
			СТАРТ ПРОЦ ИсправнаяРабота;
		}
		ИНАЧЕ  
		{
			СТОП ПРОЦ ИсправнаяРабота;
			СТАРТ ПРОЦ НеисправнаяРабота;
		}
		ЗАЦИКЛИТЬ;
	}

} /* \ПРОЦ */

ПРОЦ ИсправнаяРабота
{
	ИЗ ПРОЦ Инициализация У_ВКЛ_СУШИЛКУ;

	СОСТ Начало
	{
		ЕСЛИ (У_ВКЛ_СУШИЛКУ == ВКЛ) В СОСТ ВключениеОбъекта;
		ИНАЧЕ В СОСТ ОтключениеОбъекта;
	}
	СОСТ ВключениеОбъекта
	{
		ТАЙМАУТ ЗадержкаОбъекта В СОСТ РаботаетСушилка;
	}
	СОСТ ОтключениеОбъекта 
	{
		ТАЙМАУТ ЗадержкаОбъекта В СОСТ СушилкаОтключена;
	}
	СОСТ РаботаетСушилка
	{
		ЕСЛИ (У_ВКЛ_СУШИЛКУ != ВКЛ) В СОСТ Начало;
	}
	СОСТ СушилкаОтключена
	{
		ЕСЛИ (У_ВКЛ_СУШИЛКУ != ВЫКЛ) В СОСТ Начало;
	}
}

ПРОЦ НеисправнаяРабота
{
	ИЗ ПРОЦ Инициализация У_ВКЛ_СУШИЛКУ;
	СОСТ Начало
	{
		ЕСЛИ (У_ВКЛ_СУШИЛКУ == ВЫКЛ) В СОСТ ВключениеОбъекта;
		ИНАЧЕ В СОСТ ОтключениеОбъекта;
	}
	СОСТ ВключениеОбъекта
	{
		ТАЙМАУТ ЗадержкаОбъекта В СОСТ РаботаетСушилка;
	}
	СОСТ ОтключениеОбъекта 
	{
		ТАЙМАУТ ЗадержкаОбъекта В СОСТ СушилкаОтключена;
	}
	СОСТ РаботаетСушилка
	{
		ЕСЛИ (У_ВКЛ_СУШИЛКУ != ВЫКЛ) В СОСТ Начало;
	}
	СОСТ СушилкаОтключена
	{
		ЕСЛИ (У_ВКЛ_СУШИЛКУ != ВКЛ) В СОСТ Начало;
	}
}


ПРОЦ ЧтениеСценариев
{
ИЗ ПРОЦ Инициализация К_РУКИ_ПОД_СУШИЛКОЙ, ФлагИсправностьСушилки;
	ЦЕЛ КодКоманды ЛОКАЛ;
	СОСТ Начало
	{
		 ЕСЛИ (GetMessageFromScenariousBlock()) 
		{
			КодКоманды = GetMessageCodeFromScenariousBlock();
			ЕСЛИ  ( КодКоманды == БУС2ВОУ_ПОМЕСТИТЬ_РУКИ ) СТАРТ ПРОЦ ВтыкайРуки;
			ИНАЧЕ ЕСЛИ ( КодКоманды ==  БУС2ВОУ_УБРАТЬ_РУКИ) 
			{
				СТОП ПРОЦ ВтыкайРуки;
				К_РУКИ_ПОД_СУШИЛКОЙ = ВЫКЛ;
			}
			ИНАЧЕ ЕСЛИ ( КодКоманды ==  БУС2ВОУ_СЛОМАТЬ_СУШИЛКУ) ФлагИсправностьСушилки = ВЫКЛ;
			ИНАЧЕ ЕСЛИ ( КодКоманды ==  БУС2ВОУ_СУШИЛКА_РАБОТАЕТ) ФлагИсправностьСушилки = ВКЛ;
			ЗАЦИКЛИТЬ;
		}
	}
} 


ПРОЦ ВтыкайРуки
{
ИЗ ПРОЦ Инициализация К_РУКИ_ПОД_СУШИЛКОЙ, ФлагИсправностьСушилки;
ПЛАВ Монетка ЛОКАЛ;
	СОСТ Выбор
	{
		Монетка = Random();
		ЕСЛИ (Монетка >= 0.5)
			{
				В СОСТ РукиСунул;
			}
		ИНАЧЕ В СОСТ РукиУбрал;		
	}
	СОСТ РукиСунул
	{
		К_РУКИ_ПОД_СУШИЛКОЙ = ВКЛ; 
		ТАЙМАУТ ЗадержкаДатчика В СОСТ Выбор;
	}
	СОСТ РукиУбрал
	{
		К_РУКИ_ПОД_СУШИЛКОЙ = ВЫКЛ;
		ТАЙМАУТ ЗадержкаДатчика В СОСТ Выбор;
	}
}

}  /* \Прогр */



